name: Rebuild KB and Enforce Embedding Coverage

on:
  workflow_dispatch:
  repository_dispatch:
    types: [kb-updated]
  schedule:
    - cron: '0 6 * * *'

jobs:
  build-kb:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build KB from GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.KB_REPO_TOKEN }}
          GITHUB_OWNER: ${{ secrets.KB_REPO_OWNER }}
          GITHUB_REPO: ${{ secrets.KB_REPO_NAME }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_EMBED_MODEL: text-embedding-3-small
        run: npm run build-kb

      - name: Check embedding coverage
        run: npm run kb:check

      - name: Trigger Vercel prod deploy (auto-promote)
        if: success()
        env:
          DEPLOY_HOOK_URL: ${{ secrets.VERCEL_PROD_DEPLOY_HOOK_URL }}
        run: |
          if [ -z "$DEPLOY_HOOK_URL" ]; then echo "No deploy hook set"; exit 0; fi
          curl -s -X POST "$DEPLOY_HOOK_URL" -H "Content-Type: application/json" -d '{"force":true}'

      - name: Ensure authenticated remote
        run: |
          git remote set-url origin "https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git"

      - name: Commit changes (with fetch/pull and retry)
        continue-on-error: true
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          git config user.name "kb-bot"
          git config user.email "kb-bot@users.noreply.github.com"
          git config pull.ff only
          git fetch origin "$BRANCH_NAME"
          git checkout "$BRANCH_NAME"
          git pull --ff-only origin "$BRANCH_NAME" || true
          git add public/embeddings.json public/kb_index.json data/kb/embeddings.json data/kb/kb_index.json || true
          if git diff --cached --quiet; then echo "No changes to commit"; exit 0; fi
          git commit -m "CI: refresh embeddings and index" || true
          set +e
          git push origin "HEAD:$BRANCH_NAME"
          PUSH_EXIT=$?
          set -e
          echo "push_exit=$PUSH_EXIT" >> $GITHUB_OUTPUT
        id: commit_push

      - name: Create PR when direct push fails
        continue-on-error: true
        if: steps.commit_push.outputs.push_exit != '0'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "CI: refresh embeddings and index"
          branch: kb/artifacts-${{ github.run_id }}
          title: "CI: Refresh embeddings and index"
          body: |
            Automated artifacts update from KB build.
            This PR was created because a direct push to `${{ github.ref_name }}` failed (likely due to branch protection or race conditions).
          add-paths: |
            public/embeddings.json
            public/kb_index.json
            data/kb/embeddings.json
            data/kb/kb_index.json


